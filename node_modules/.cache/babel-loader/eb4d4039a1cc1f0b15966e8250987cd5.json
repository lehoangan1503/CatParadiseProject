{"ast":null,"code":"var _jsxFileName = \"D:\\\\CatParadiseProject\\\\src\\\\components\\\\CatParadiseHeader\\\\CatParadiseHeader.js\";\nimport { Component } from \"react\";\nimport \"../../styles/CatParadiseHeader.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CatParadiseHeader extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.findCountryHaveHighestCatBreeds = () => {\n      let countriesObjArr = this.ascendingNumberCatBreedsOfCountry();\n      return countriesObjArr[countriesObjArr.length - 1].country;\n    };\n  }\n\n  getOneCatAverageWeight(index) {\n    let catObj = this.props.catBreeds[index];\n    const arrayOfWeight = catObj.weight.metric.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\n\n    let averageWeight = (arrayOfWeight[0] * 1 + arrayOfWeight[1] * 1) / 2;\n    return averageWeight;\n  }\n\n  averageWeight() {\n    const averageWeightOfEachCatArray = this.props.catBreeds.map((cat, index) => {\n      return this.getOneCatAverageWeight(index);\n    });\n    let totalWeightOfAllCats = 0;\n    averageWeightOfEachCatArray.forEach(weight => {\n      totalWeightOfAllCats = totalWeightOfAllCats + weight;\n    });\n    let averageWeightOfAllCats = totalWeightOfAllCats / averageWeightOfEachCatArray.length;\n    return averageWeightOfAllCats;\n  }\n\n  getOneCatAverageLongevity(index) {\n    let catObj = this.props.catBreeds[index];\n    const arrayOfLongevity = catObj.life_span.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\n\n    let averageLongevity = (arrayOfLongevity[0] * 1 + arrayOfLongevity[1] * 1) / 2;\n    return averageLongevity;\n  }\n\n  averageLongevity() {\n    const averageLongevityOfEachCatArray = this.props.catBreeds.map((cat, index) => {\n      return this.getOneCatAverageLongevity(index);\n    });\n    let totalLongevityOfAllCats = 0;\n    averageLongevityOfEachCatArray.forEach(lifespan => {\n      totalLongevityOfAllCats = totalLongevityOfAllCats + lifespan;\n    });\n    let averageLongevityOfAllCats = totalLongevityOfAllCats / averageLongevityOfEachCatArray.length;\n    return averageLongevityOfAllCats;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catParadiseHeader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"30 Days Of React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commonCatInfor-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://www.30daysofreact.com/static/media/favicon.e3a42d29.ico\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cats Paradise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"cat-breeds-quantity\",\n          children: [\"There are \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [this.props.catBreeds.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this), \"cat breeds\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"On average a cat can weight about\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [this.averageWeight().toFixed(2), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), \" Kg and live\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.averageLongevity().toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), \" years.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There are \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [this.countCountryHaveCatBreeds(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this), \"countries have cat breeds.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CatParadiseHeader;","map":{"version":3,"names":["Component","CatParadiseHeader","findCountryHaveHighestCatBreeds","countriesObjArr","ascendingNumberCatBreedsOfCountry","length","country","getOneCatAverageWeight","index","catObj","props","catBreeds","arrayOfWeight","weight","metric","split","averageWeight","averageWeightOfEachCatArray","map","cat","totalWeightOfAllCats","forEach","averageWeightOfAllCats","getOneCatAverageLongevity","arrayOfLongevity","life_span","averageLongevity","averageLongevityOfEachCatArray","totalLongevityOfAllCats","lifespan","averageLongevityOfAllCats","render","toFixed","countCountryHaveCatBreeds"],"sources":["D:/CatParadiseProject/src/components/CatParadiseHeader/CatParadiseHeader.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport \"../../styles/CatParadiseHeader.scss\";\r\n\r\nclass CatParadiseHeader extends Component {\r\n  getOneCatAverageWeight(index) {\r\n    let catObj = this.props.catBreeds[index];\r\n\r\n    const arrayOfWeight = catObj.weight.metric.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\r\n\r\n    let averageWeight = (arrayOfWeight[0] * 1 + arrayOfWeight[1] * 1) / 2;\r\n\r\n    return averageWeight;\r\n  }\r\n  averageWeight() {\r\n    const averageWeightOfEachCatArray = this.props.catBreeds.map(\r\n      (cat, index) => {\r\n        return this.getOneCatAverageWeight(index);\r\n      }\r\n    );\r\n\r\n    let totalWeightOfAllCats = 0;\r\n    averageWeightOfEachCatArray.forEach((weight) => {\r\n      totalWeightOfAllCats = totalWeightOfAllCats + weight;\r\n    });\r\n\r\n    let averageWeightOfAllCats =\r\n      totalWeightOfAllCats / averageWeightOfEachCatArray.length;\r\n    return averageWeightOfAllCats;\r\n  }\r\n\r\n  getOneCatAverageLongevity(index) {\r\n    let catObj = this.props.catBreeds[index];\r\n\r\n    const arrayOfLongevity = catObj.life_span.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\r\n\r\n    let averageLongevity =\r\n      (arrayOfLongevity[0] * 1 + arrayOfLongevity[1] * 1) / 2;\r\n\r\n    return averageLongevity;\r\n  }\r\n  averageLongevity() {\r\n    const averageLongevityOfEachCatArray = this.props.catBreeds.map(\r\n      (cat, index) => {\r\n        return this.getOneCatAverageLongevity(index);\r\n      }\r\n    );\r\n    let totalLongevityOfAllCats = 0;\r\n    averageLongevityOfEachCatArray.forEach((lifespan) => {\r\n      totalLongevityOfAllCats = totalLongevityOfAllCats + lifespan;\r\n    });\r\n\r\n    let averageLongevityOfAllCats =\r\n      totalLongevityOfAllCats / averageLongevityOfEachCatArray.length;\r\n    return averageLongevityOfAllCats;\r\n  }\r\n\r\n  findCountryHaveHighestCatBreeds = () => {\r\n    let countriesObjArr = this.ascendingNumberCatBreedsOfCountry();\r\n    return countriesObjArr[countriesObjArr.length - 1].country;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"catParadiseHeader-container\">\r\n        <div className=\"project-title\">\r\n          <h1>30 Days Of React</h1>\r\n        </div>\r\n        <div className=\"commonCatInfor-container\">\r\n          <img\r\n            src=\"https://www.30daysofreact.com/static/media/favicon.e3a42d29.ico\"\r\n            alt=\"\"\r\n          />\r\n          <h2>Cats Paradise</h2>\r\n          <p id=\"cat-breeds-quantity\">\r\n            There are <span>{this.props.catBreeds.length} </span>cat breeds{\" \"}\r\n          </p>\r\n          <p>\r\n            On average a cat can weight about{\" \"}\r\n            <span>{this.averageWeight().toFixed(2)} </span> Kg and live{\" \"}\r\n            <span>{this.averageLongevity().toFixed(2)}</span> years.\r\n          </p>\r\n          <p>\r\n            There are <span>{this.countCountryHaveCatBreeds()} </span>countries\r\n            have cat breeds.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CatParadiseHeader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}