{"ast":null,"code":"var _jsxFileName = \"D:\\\\CatParadiseProject\\\\src\\\\components\\\\CatParadiseBody\\\\CatCountriesFilter\\\\CatCountriesFilter.js\",\n    _this = this;\n\nimport \"../../../styles/catCountriesFilter.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CatCountriesFilter = _ref => {\n  let {\n    listCountries,\n    loadCatCardWithFilter\n  } = _ref;\n  return function (loadCatCardWithFilter) {\n    //obj props country {country:\"name\",catBreeds:number}\n    function loadCatCardWithFilter(event) {\n      props;\n    }\n\n    function loadCountryWithNumberOfBreeds() {\n      const listCountriesToRender = listCountries.map(country => {\n        if (country.country === \"All\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: country.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 13\n            }, this)\n          }, country.country, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: event => {\n            loadCatCardWithFilter(event);\n          },\n          className: \"country\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [country.country, \"(\", country.catBreeds, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this)\n        }, country.country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this);\n      });\n      return listCountriesToRender;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catCountriesFilter-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countries\",\n        children: loadCountryWithNumberOfBreeds()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, _this);\n  }(loadCatCardWithFilter);\n};\n\n_c = CatCountriesFilter;\nexport default CatCountriesFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatCountriesFilter\");","map":{"version":3,"names":["CatCountriesFilter","listCountries","loadCatCardWithFilter","event","props","loadCountryWithNumberOfBreeds","listCountriesToRender","map","country","catBreeds"],"sources":["D:/CatParadiseProject/src/components/CatParadiseBody/CatCountriesFilter/CatCountriesFilter.js"],"sourcesContent":["import \"../../../styles/catCountriesFilter.scss\";\r\nconst CatCountriesFilter = ({ listCountries, loadCatCardWithFilter }) => {\r\n  //obj props country {country:\"name\",catBreeds:number}\r\n\r\n  function loadCatCardWithFilter(event) {\r\n    props\r\n  }\r\n\r\n  function loadCountryWithNumberOfBreeds() {\r\n    const listCountriesToRender = listCountries.map((country) => {\r\n      if (country.country === \"All\") {\r\n        return (\r\n          <div key={country.country} className=\"country\">\r\n            <p>{country.country}</p>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div\r\n          onClick={(event) => {\r\n            loadCatCardWithFilter(event);\r\n          }}\r\n          key={country.country}\r\n          className=\"country\"\r\n        >\r\n          <p>\r\n            {country.country}({country.catBreeds})\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n    return listCountriesToRender;\r\n  }\r\n\r\n  return (\r\n    <div className=\"catCountriesFilter-container\">\r\n      <div className=\"countries\">{loadCountryWithNumberOfBreeds()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CatCountriesFilter;\r\n"],"mappings":";;;AAAA,OAAO,yCAAP;;;AACA,MAAMA,kBAAkB,GAAG;EAAA,IAAC;IAAEC,aAAF;IAAiBC;EAAjB,CAAD;EAAA,wCAA8C;IACvE;IAEA,SAASA,qBAAT,CAA+BC,KAA/B,EAAsC;MACpCC,KAAK;IACN;;IAED,SAASC,6BAAT,GAAyC;MACvC,MAAMC,qBAAqB,GAAGL,aAAa,CAACM,GAAd,CAAmBC,OAAD,IAAa;QAC3D,IAAIA,OAAO,CAACA,OAAR,KAAoB,KAAxB,EAA+B;UAC7B,oBACE;YAA2B,SAAS,EAAC,SAArC;YAAA,uBACE;cAAA,UAAIA,OAAO,CAACA;YAAZ;cAAA;cAAA;cAAA;YAAA;UADF,GAAUA,OAAO,CAACA,OAAlB;YAAA;YAAA;YAAA;UAAA,QADF;QAKD;;QACD,oBACE;UACE,OAAO,EAAGL,KAAD,IAAW;YAClBD,qBAAqB,CAACC,KAAD,CAArB;UACD,CAHH;UAKE,SAAS,EAAC,SALZ;UAAA,uBAOE;YAAA,WACGK,OAAO,CAACA,OADX,OACqBA,OAAO,CAACC,SAD7B;UAAA;YAAA;YAAA;YAAA;UAAA;QAPF,GAIOD,OAAO,CAACA,OAJf;UAAA;UAAA;UAAA;QAAA,QADF;MAaD,CArB6B,CAA9B;MAsBA,OAAOF,qBAAP;IACD;;IAED,oBACE;MAAK,SAAS,EAAC,8BAAf;MAAA,uBACE;QAAK,SAAS,EAAC,WAAf;QAAA,UAA4BD,6BAA6B;MAAzD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,SADF;EAKD,CAtC0B;AAAA,CAA3B;;KAAML,kB;AAwCN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}