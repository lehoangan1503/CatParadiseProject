{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-30-days\\\\test-react\\\\src\\\\components\\\\CatParadiseBody\\\\CaParadiseBody.js\";\nimport React, { Fragment } from \"react\";\nimport CatCard from \"./CatCard/CatCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CatParadiseBody = props => {\n  function getCatCardList() {\n    const {\n      catBreeds\n    } = props;\n    const catCardList = [];\n\n    for (let index = 0; index < catBreeds.length; index++) {\n      const {\n        image,\n        name,\n        origin,\n        temperament,\n        lifespan,\n        weight,\n        description\n      } = catBreeds[index];\n\n      if (catBreeds[index].image !== undefined && catBreeds[index].image.id !== undefined) {\n        catCardList.push( /*#__PURE__*/_jsxDEV(CatCard, {\n          cat: catBreeds[index]\n        }, catBreeds[index].image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    console.log(\"\", catCardList);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: catCardList\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-cards\",\n    children: getCatCardList()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CatParadiseBody;\nexport default CatParadiseBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatParadiseBody\");","map":{"version":3,"names":["React","Fragment","CatCard","CatParadiseBody","props","getCatCardList","catBreeds","catCardList","index","length","image","name","origin","temperament","lifespan","weight","description","undefined","id","push","console","log"],"sources":["D:/react-30-days/test-react/src/components/CatParadiseBody/CaParadiseBody.js"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport CatCard from \"./CatCard/CatCard\";\r\n\r\nconst CatParadiseBody = (props) => {\r\n  function getCatCardList() {\r\n    const { catBreeds } = props;\r\n\r\n    const catCardList = [];\r\n\r\n    for (let index = 0; index < catBreeds.length; index++) {\r\n      const {\r\n        image,\r\n        name,\r\n        origin,\r\n        temperament,\r\n        lifespan,\r\n        weight,\r\n        description,\r\n      } = catBreeds[index];\r\n      if (\r\n        catBreeds[index].image !== undefined &&\r\n        catBreeds[index].image.id !== undefined\r\n      ) {\r\n        catCardList.push(\r\n          <CatCard\r\n            key={catBreeds[index].image.id}\r\n            cat={catBreeds[index]}\r\n          ></CatCard>\r\n        );\r\n      }\r\n    }\r\n    console.log(\"\", catCardList);\r\n    return <>{catCardList}</>;\r\n  }\r\n  return <div className=\"cart-cards\">{getCatCardList()}</div>;\r\n};\r\n\r\nexport default CatParadiseBody;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EACjC,SAASC,cAAT,GAA0B;IACxB,MAAM;MAAEC;IAAF,IAAgBF,KAAtB;IAEA,MAAMG,WAAW,GAAG,EAApB;;IAEA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,SAAS,CAACG,MAAtC,EAA8CD,KAAK,EAAnD,EAAuD;MACrD,MAAM;QACJE,KADI;QAEJC,IAFI;QAGJC,MAHI;QAIJC,WAJI;QAKJC,QALI;QAMJC,MANI;QAOJC;MAPI,IAQFV,SAAS,CAACE,KAAD,CARb;;MASA,IACEF,SAAS,CAACE,KAAD,CAAT,CAAiBE,KAAjB,KAA2BO,SAA3B,IACAX,SAAS,CAACE,KAAD,CAAT,CAAiBE,KAAjB,CAAuBQ,EAAvB,KAA8BD,SAFhC,EAGE;QACAV,WAAW,CAACY,IAAZ,eACE,QAAC,OAAD;UAEE,GAAG,EAAEb,SAAS,CAACE,KAAD;QAFhB,GACOF,SAAS,CAACE,KAAD,CAAT,CAAiBE,KAAjB,CAAuBQ,EAD9B;UAAA;UAAA;UAAA;QAAA,QADF;MAMD;IACF;;IACDE,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAgBd,WAAhB;IACA,oBAAO;MAAA,UAAGA;IAAH,iBAAP;EACD;;EACD,oBAAO;IAAK,SAAS,EAAC,YAAf;IAAA,UAA6BF,cAAc;EAA3C;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAhCD;;KAAMF,e;AAkCN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}