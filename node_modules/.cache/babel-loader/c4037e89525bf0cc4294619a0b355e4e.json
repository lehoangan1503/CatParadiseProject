{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-30-days\\\\test-react\\\\src\\\\components\\\\CatParadiseHeader.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CatParadiseHeader extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: []\n    };\n  }\n\n  async getCatsDataFromApi() {\n    const URL_API = \"https://api.thecatapi.com/v1/breeds\";\n\n    try {\n      const response = await fetch(URL_API);\n      const data = await response.json();\n      this.setState({\n        data: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getOneCatAverageWeight(index) {\n    console.log(object);\n    let catObj = this.state.data[index];\n    const arrayOfWeight = catObj.weight.metric.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\n\n    let averageWeight = (0 + arrayOfWeight[0] + arrayOfWeight[1]) / 2;\n    return averageWeight;\n  }\n\n  averageWeight() {\n    const averageWeightOfEachCatArray = this.state.data.foreach((cat, index) => {\n      this.getOneCatAverageWeight(index);\n    });\n    let totalWeightOfAllCats = 0;\n    averageWeightOfEachCatArray.foreach(weight => {\n      totalWeightOfAllCats = totalWeightOfAllCats + weight;\n    });\n    let averageWeightOfAllCats = totalWeightOfAllCats / averageWeightOfEachCatArray.length;\n    return averageWeightOfAllCats;\n  }\n\n  getOneCatAverageLongevity(index) {\n    let catObj = this.state.data[index];\n    const arrayOfLongevity = catObj.life_span.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\n\n    let averageLongevity = (0 + arrayOfLongevity[0] + arrayOfLongevity[1]) / 2;\n    return averageLongevity;\n  }\n\n  averageLongevity() {\n    const averageLongevityOfEachCatArray = this.state.data.foreach((cat, index) => {\n      this.getOneCatAverageLongevity(index);\n    });\n    let totalLongevityOfAllCats = 0;\n    averageLongevityOfEachCatArray.foreach(lifespan => {\n      totalLongevityOfAllCats = totalLongevityOfAllCats + lifespan;\n    });\n    let averageLongevityOfAllCats = totalLongevityOfAllCats / averageLongevityOfEachCatArray.length;\n    return averageLongevityOfAllCats;\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"catParadiseHeader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"project-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"30 Days Of React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"commonCatInfor-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cats Paradise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There are \", this.state.data.length, \" cat breeds \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"On average a cat can weight about \", this.averageWeight(), \" Kg and live\", \" \", this.verageLongevity(), \" years.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CatParadiseHeader;","map":{"version":3,"names":["Component","CatParadiseHeader","state","data","getCatsDataFromApi","URL_API","response","fetch","json","setState","error","console","log","getOneCatAverageWeight","index","object","catObj","arrayOfWeight","weight","metric","split","averageWeight","averageWeightOfEachCatArray","foreach","cat","totalWeightOfAllCats","averageWeightOfAllCats","length","getOneCatAverageLongevity","arrayOfLongevity","life_span","averageLongevity","averageLongevityOfEachCatArray","totalLongevityOfAllCats","lifespan","averageLongevityOfAllCats","componentDidMount","render","verageLongevity"],"sources":["D:/react-30-days/test-react/src/components/CatParadiseHeader.js"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nclass CatParadiseHeader extends Component {\r\n  state = { data: [] };\r\n\r\n  async getCatsDataFromApi() {\r\n    const URL_API = \"https://api.thecatapi.com/v1/breeds\";\r\n\r\n    try {\r\n      const response = await fetch(URL_API);\r\n      const data = await response.json();\r\n      this.setState({ data: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  getOneCatAverageWeight(index) {\r\n      console.log(object);\r\n    let catObj = this.state.data[index];\r\n\r\n    const arrayOfWeight = catObj.weight.metric.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\r\n\r\n    let averageWeight = (0 + arrayOfWeight[0] + arrayOfWeight[1]) / 2;\r\n\r\n    return averageWeight;\r\n  }\r\n  averageWeight() {\r\n    const averageWeightOfEachCatArray = this.state.data.foreach(\r\n      (cat, index) => {\r\n        this.getOneCatAverageWeight(index);\r\n      }\r\n    );\r\n    let totalWeightOfAllCats = 0;\r\n    averageWeightOfEachCatArray.foreach((weight) => {\r\n      totalWeightOfAllCats = totalWeightOfAllCats + weight;\r\n    });\r\n\r\n    let averageWeightOfAllCats =\r\n      totalWeightOfAllCats / averageWeightOfEachCatArray.length;\r\n    return averageWeightOfAllCats;\r\n  }\r\n\r\n  getOneCatAverageLongevity(index) {\r\n    let catObj = this.state.data[index];\r\n\r\n    const arrayOfLongevity = catObj.life_span.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\r\n\r\n    let averageLongevity = (0 + arrayOfLongevity[0] + arrayOfLongevity[1]) / 2;\r\n\r\n    return averageLongevity;\r\n  }\r\n  averageLongevity() {\r\n    const averageLongevityOfEachCatArray = this.state.data.foreach(\r\n      (cat, index) => {\r\n        this.getOneCatAverageLongevity(index);\r\n      }\r\n    );\r\n    let totalLongevityOfAllCats = 0;\r\n    averageLongevityOfEachCatArray.foreach((lifespan) => {\r\n      totalLongevityOfAllCats = totalLongevityOfAllCats + lifespan;\r\n    });\r\n\r\n    let averageLongevityOfAllCats =\r\n      totalLongevityOfAllCats / averageLongevityOfEachCatArray.length;\r\n    return averageLongevityOfAllCats;\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div class=\"catParadiseHeader-container\">\r\n        <div class=\"project-title\">\r\n          <h1>30 Days Of React</h1>\r\n        </div>\r\n        <div class=\"commonCatInfor-container\">\r\n          <h2>Cats Paradise</h2>\r\n          <p>There are {this.state.data.length} cat breeds </p>\r\n          <p>\r\n            On average a cat can weight about {this.averageWeight()} Kg and live{\" \"}\r\n            {this.verageLongevity()} years.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CatParadiseHeader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}