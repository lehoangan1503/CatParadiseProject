{"ast":null,"code":"var _jsxFileName = \"D:\\\\CatParadiseProject\\\\src\\\\components\\\\CatParadiseBody\\\\CatParadiseBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CatCard from \"./CatCard/CatCard\";\nimport CatCountriesFilter from \"./CatCountriesFilter/CatCountriesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CatParadiseBody = props => {\n  _s();\n\n  //state= {loadWithCountryFilterOut:{}}\n  let [loadWithCountryFilterOut, setCountry] = useState({});\n\n  function findTotalCountries() {\n    let totalCountries = [{\n      country: \"All\",\n      catBreeds: 67\n    }];\n    props.catBreeds.forEach(cat => {\n      let addNewCountry = false;\n\n      for (let index = 0; index < totalCountries.length; index++) {\n        if (cat.origin === totalCountries[index].country) {\n          addNewCountry = false;\n          break;\n        }\n\n        addNewCountry = true;\n      }\n\n      if (addNewCountry === true) totalCountries.push({\n        country: cat.origin,\n        catBreeds: 0\n      });\n    });\n    return totalCountries;\n  }\n\n  function ascendingNumberCatBreedsOfCountry() {\n    const totalCountries = findTotalCountries();\n    props.catBreeds.forEach(cat => {\n      for (let index = 0; index < totalCountries.length; index++) {\n        if (cat.origin === totalCountries[index].country) {\n          totalCountries[index].catBreeds = totalCountries[index].catBreeds + 1;\n        }\n      }\n    });\n    const ascendingNumberCatBreedsOfCountry = totalCountries.sort((country1, country2) => {\n      return country1.catBreeds - country2.catBreeds;\n    });\n    return ascendingNumberCatBreedsOfCountry;\n  }\n\n  function catBreedsDataWithFilter() {\n    const {\n      catBreeds\n    } = props;\n    let catBreedsDataWithFilter = [];\n\n    if (loadWithCountryFilterOut.country === undefined || loadCatCardWithFilter.country === \"All\") {\n      catBreedsDataWithFilter = catBreeds;\n    } else {\n      catBreeds.forEach(cat => {\n        if (cat.origin === loadWithCountryFilterOut.country && cat.image !== undefined && cat.image.url !== undefined) {\n          console.log(\"vcl\");\n          catBreedsDataWithFilter.push(cat);\n        }\n      });\n    }\n\n    return catBreedsDataWithFilter;\n  }\n\n  function getCatCardList() {\n    const catBreeds = catBreedsDataWithFilter();\n    const catCardList = [];\n\n    for (let index = 0; index < catBreeds.length; index++) {\n      const {\n        image,\n        name,\n        origin,\n        temperament,\n        life_span,\n        weight,\n        description\n      } = catBreeds[index];\n      const cat = {\n        image,\n        name,\n        origin,\n        temperament,\n        life_span,\n        weight,\n        description\n      };\n\n      if (catBreeds[index].image !== undefined && catBreeds[index].image.id !== undefined) {\n        catCardList.push( /*#__PURE__*/_jsxDEV(CatCard, {\n          cat: cat\n        }, catBreeds[index].image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    return catCardList;\n  }\n\n  function loadCatCardWithFilter(key) {\n    console.log(key);\n    setCountry(loadWithCountryFilterOut = {\n      country: key\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-cards\",\n    children: [/*#__PURE__*/_jsxDEV(CatCountriesFilter, {\n      listCountries: ascendingNumberCatBreedsOfCountry(),\n      loadCatCardWithFilter: country => {\n        loadCatCardWithFilter(country);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), getCatCardList()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CatParadiseBody, \"ncNy32wK89vdZwpbq6rC+q95y1g=\");\n\n_c = CatParadiseBody;\nexport default CatParadiseBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatParadiseBody\");","map":{"version":3,"names":["React","useState","CatCard","CatCountriesFilter","CatParadiseBody","props","loadWithCountryFilterOut","setCountry","findTotalCountries","totalCountries","country","catBreeds","forEach","cat","addNewCountry","index","length","origin","push","ascendingNumberCatBreedsOfCountry","sort","country1","country2","catBreedsDataWithFilter","undefined","loadCatCardWithFilter","image","url","console","log","getCatCardList","catCardList","name","temperament","life_span","weight","description","id","key"],"sources":["D:/CatParadiseProject/src/components/CatParadiseBody/CatParadiseBody.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CatCard from \"./CatCard/CatCard\";\r\nimport CatCountriesFilter from \"./CatCountriesFilter/CatCountriesFilter\";\r\n\r\nconst CatParadiseBody = (props) => {\r\n  //state= {loadWithCountryFilterOut:{}}\r\n  let [loadWithCountryFilterOut, setCountry] = useState({});\r\n\r\n  function findTotalCountries() {\r\n    let totalCountries = [{ country: \"All\", catBreeds: 67 }];\r\n    props.catBreeds.forEach((cat) => {\r\n      let addNewCountry = false;\r\n      for (let index = 0; index < totalCountries.length; index++) {\r\n        if (cat.origin === totalCountries[index].country) {\r\n          addNewCountry = false;\r\n          break;\r\n        }\r\n        addNewCountry = true;\r\n      }\r\n\r\n      if (addNewCountry === true)\r\n        totalCountries.push({ country: cat.origin, catBreeds: 0 });\r\n    });\r\n    return totalCountries;\r\n  }\r\n\r\n  function ascendingNumberCatBreedsOfCountry() {\r\n    const totalCountries = findTotalCountries();\r\n\r\n    props.catBreeds.forEach((cat) => {\r\n      for (let index = 0; index < totalCountries.length; index++) {\r\n        if (cat.origin === totalCountries[index].country) {\r\n          totalCountries[index].catBreeds = totalCountries[index].catBreeds + 1;\r\n        }\r\n      }\r\n    });\r\n    const ascendingNumberCatBreedsOfCountry = totalCountries.sort(\r\n      (country1, country2) => {\r\n        return country1.catBreeds - country2.catBreeds;\r\n      }\r\n    );\r\n    return ascendingNumberCatBreedsOfCountry;\r\n  }\r\n\r\n  function catBreedsDataWithFilter() {\r\n    const { catBreeds } = props;\r\n    let catBreedsDataWithFilter = [];\r\n    if (\r\n      loadWithCountryFilterOut.country === undefined ||\r\n      loadCatCardWithFilter.country === \"All\"\r\n    ) {\r\n      catBreedsDataWithFilter = catBreeds;\r\n    } else {\r\n      catBreeds.forEach((cat) => {\r\n        if (\r\n          cat.origin === loadWithCountryFilterOut.country &&\r\n          cat.image !== undefined &&\r\n          cat.image.url !== undefined\r\n        ) {\r\n          console.log(\"vcl\");\r\n          catBreedsDataWithFilter.push(cat);\r\n        }\r\n      });\r\n    }\r\n\r\n    return catBreedsDataWithFilter;\r\n  }\r\n\r\n  function getCatCardList() {\r\n    const catBreeds = catBreedsDataWithFilter();\r\n\r\n    const catCardList = [];\r\n\r\n    for (let index = 0; index < catBreeds.length; index++) {\r\n      const {\r\n        image,\r\n        name,\r\n        origin,\r\n        temperament,\r\n        life_span,\r\n        weight,\r\n        description,\r\n      } = catBreeds[index];\r\n      const cat = {\r\n        image,\r\n        name,\r\n        origin,\r\n        temperament,\r\n        life_span,\r\n        weight,\r\n        description,\r\n      };\r\n      if (\r\n        catBreeds[index].image !== undefined &&\r\n        catBreeds[index].image.id !== undefined\r\n      ) {\r\n        catCardList.push(\r\n          <CatCard key={catBreeds[index].image.id} cat={cat}></CatCard>\r\n        );\r\n      }\r\n    }\r\n\r\n    return catCardList;\r\n  }\r\n  function loadCatCardWithFilter(key) {\r\n    console.log(key);\r\n    setCountry((loadWithCountryFilterOut = { country: key }));\r\n  }\r\n  return (\r\n    <div className=\"cart-cards\">\r\n      <CatCountriesFilter\r\n        listCountries={ascendingNumberCatBreedsOfCountry()}\r\n        loadCatCardWithFilter={(country) => {\r\n          loadCatCardWithFilter(country);\r\n        }}\r\n      ></CatCountriesFilter>\r\n      {getCatCardList()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CatParadiseBody;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}