{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-30-days\\\\test-react\\\\src\\\\components\\\\CatParadiseHeader.js\";\nimport axios from \"axios\";\nimport { Component, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CatParadiseHeader extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: []\n    };\n  }\n\n  async getCatsDataFromApi() {\n    const URL_API = \"https://api.thecatapi.com/v1/breeds\";\n\n    try {\n      axios.interceptors.request.use(config => {\n        // log a message before any HTTP request is sent\n        console.log('Request was sent');\n        return config;\n      });\n      const response = await axios.get(URL_API);\n      const catBreeds = response.data;\n      this.setState({\n        data: catBreeds\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount() {\n    this.getCatsDataFromApi();\n  }\n\n  getOneCatAverageWeight(index) {\n    let catObj = this.state.data[index];\n    const arrayOfWeight = catObj.weight.metric.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\n\n    let averageWeight = (arrayOfWeight[0] * 1 + arrayOfWeight[1] * 1) / 2;\n    return averageWeight;\n  }\n\n  averageWeight() {\n    const averageWeightOfEachCatArray = this.state.data.map((cat, index) => {\n      return this.getOneCatAverageWeight(index);\n    });\n    let totalWeightOfAllCats = 0;\n    averageWeightOfEachCatArray.forEach(weight => {\n      totalWeightOfAllCats = totalWeightOfAllCats + weight;\n    });\n    let averageWeightOfAllCats = totalWeightOfAllCats / averageWeightOfEachCatArray.length;\n    return averageWeightOfAllCats;\n  }\n\n  getOneCatAverageLongevity(index) {\n    let catObj = this.state.data[index];\n    const arrayOfLongevity = catObj.life_span.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\n\n    let averageLongevity = (arrayOfLongevity[0] * 1 + arrayOfLongevity[1] * 1) / 2;\n    return averageLongevity;\n  }\n\n  averageLongevity() {\n    const averageLongevityOfEachCatArray = this.state.data.map((cat, index) => {\n      return this.getOneCatAverageLongevity(index);\n    });\n    let totalLongevityOfAllCats = 0;\n    averageLongevityOfEachCatArray.forEach(lifespan => {\n      totalLongevityOfAllCats = totalLongevityOfAllCats + lifespan;\n    });\n    let averageLongevityOfAllCats = totalLongevityOfAllCats / averageLongevityOfEachCatArray.length;\n    return averageLongevityOfAllCats;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catParadiseHeader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"30 Days Of React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commonCatInfor-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cats Paradise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There are \", this.state.data.length, \" cat breeds \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"On average a cat can weight about \", this.averageWeight().toFixed(2), \" \", \"Kg and live \", this.averageLongevity().toFixed(2), \" years.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CatParadiseHeader;","map":{"version":3,"names":["axios","Component","useEffect","CatParadiseHeader","state","data","getCatsDataFromApi","URL_API","interceptors","request","use","config","console","log","response","get","catBreeds","setState","error","componentDidMount","getOneCatAverageWeight","index","catObj","arrayOfWeight","weight","metric","split","averageWeight","averageWeightOfEachCatArray","map","cat","totalWeightOfAllCats","forEach","averageWeightOfAllCats","length","getOneCatAverageLongevity","arrayOfLongevity","life_span","averageLongevity","averageLongevityOfEachCatArray","totalLongevityOfAllCats","lifespan","averageLongevityOfAllCats","render","toFixed"],"sources":["D:/react-30-days/test-react/src/components/CatParadiseHeader.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Component, useEffect } from \"react\";\r\n\r\nclass CatParadiseHeader extends Component {\r\n  state = { data: [] };\r\n\r\n  async getCatsDataFromApi() {\r\n    const URL_API = \"https://api.thecatapi.com/v1/breeds\";\r\n\r\n    try {\r\n        axios.interceptors.request.use(config => {\r\n            // log a message before any HTTP request is sent\r\n            console.log('Request was sent');\r\n          \r\n            return config;\r\n          });\r\n\r\n      const response = await axios.get(URL_API);\r\n      const catBreeds = response.data;\r\n\r\n      this.setState({ data: catBreeds });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getCatsDataFromApi();\r\n  }\r\n  getOneCatAverageWeight(index) {\r\n    let catObj = this.state.data[index];\r\n\r\n    const arrayOfWeight = catObj.weight.metric.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\r\n\r\n    let averageWeight = (arrayOfWeight[0] * 1 + arrayOfWeight[1] * 1) / 2;\r\n\r\n    return averageWeight;\r\n  }\r\n  averageWeight() {\r\n    const averageWeightOfEachCatArray = this.state.data.map((cat, index) => {\r\n      return this.getOneCatAverageWeight(index);\r\n    });\r\n\r\n    let totalWeightOfAllCats = 0;\r\n    averageWeightOfEachCatArray.forEach((weight) => {\r\n      totalWeightOfAllCats = totalWeightOfAllCats + weight;\r\n    });\r\n\r\n    let averageWeightOfAllCats =\r\n      totalWeightOfAllCats / averageWeightOfEachCatArray.length;\r\n    return averageWeightOfAllCats;\r\n  }\r\n\r\n  getOneCatAverageLongevity(index) {\r\n    let catObj = this.state.data[index];\r\n\r\n    const arrayOfLongevity = catObj.life_span.split(\" - \"); // change weight data format from \"1 - 2\" to arr[\"1\",\"2\"];\r\n\r\n    let averageLongevity =\r\n      (arrayOfLongevity[0] * 1 + arrayOfLongevity[1] * 1) / 2;\r\n\r\n    return averageLongevity;\r\n  }\r\n  averageLongevity() {\r\n    const averageLongevityOfEachCatArray = this.state.data.map((cat, index) => {\r\n      return this.getOneCatAverageLongevity(index);\r\n    });\r\n    let totalLongevityOfAllCats = 0;\r\n    averageLongevityOfEachCatArray.forEach((lifespan) => {\r\n      totalLongevityOfAllCats = totalLongevityOfAllCats + lifespan;\r\n    });\r\n\r\n    let averageLongevityOfAllCats =\r\n      totalLongevityOfAllCats / averageLongevityOfEachCatArray.length;\r\n    return averageLongevityOfAllCats;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catParadiseHeader-container\">\r\n        <div className=\"project-title\">\r\n          <h1>30 Days Of React</h1>\r\n        </div>\r\n        <div className=\"commonCatInfor-container\">\r\n          <h2>Cats Paradise</h2>\r\n          <p>There are {this.state.data.length} cat breeds </p>\r\n          <p>\r\n            On average a cat can weight about {this.averageWeight().toFixed(2)}{\" \"}\r\n            Kg and live {this.averageLongevity().toFixed(2)} years.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CatParadiseHeader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}